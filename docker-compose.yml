version: '3.8'

services:
    sp_service:
        build: 
            context: ./sp_service
            dockerfile: Dockerfile
        container_name: sp_service
        env_file:
            - .env
        restart: always
        entrypoint: /entrypoint.sh
        volumes:
            - staticfiles:/sp_service/staticfiles
        depends_on:
            - db
            - redis

    celery:
        restart: always
        build: 
            context: ./sp_service/
            dockerfile: Dockerfile
        command: bash -c " celery -A proj worker --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
        container_name: celery
        volumes:
            - ./sp_service:/sp_service
        environment:
            - DEBUG=1
            - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
            - CELERY_BROKER=redis://redis:6379/0
            - CELERY_BACKEND=django-db
        env_file:
            - .env
        depends_on:
            - sp_service
            - redis

    celery_beat:
        restart: always
        build: 
            context: ./sp_service/
            dockerfile: Dockerfile
        container_name: celery_beat
        volumes:
            - ./sp_service:/sp_service
        env_file:
            - .env
        depends_on:
            - db
            - redis
            - celery
        command: bash -c "celery -A proj worker --beat --scheduler django --loglevel=info"

    db:
        image: postgres
        container_name: db
        restart: always
        environment:
            POSTGRES_DB: "postgres"
            POSTGRES_USER: "postgres"
            POSTGRES_PASSWORD: "supersecretpassword"
            PGDATA: "/var/lib/postgresql/data/pgdata"
        ports:
            - "5432:5432"
        env_file:
            - .env
        volumes:
            - pgdata:/var/lib/postgresql/data/

    redis:
        image: "redis:alpine"
    
    frontend:
        build:
            context: ./frontend/
            dockerfile: Dockerfile
        container_name: frontend
    
    nginx:
        build:
            context: ./nginx/
            dockerfile: Dockerfile
        container_name: nginx
        volumes:
        - staticfiles:/staticfiles
        ports:
            - 80:80
        depends_on:
            - sp_service

volumes:
    pgdata:
    staticfiles:
