# Generated by Django 3.2 on 2022-07-28 18:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('href', models.URLField(max_length=100, null=True)),
                ('spotify_id', models.CharField(help_text='Search spotify API with this ID for Data.', max_length=50, null=True)),
                ('uri', models.CharField(max_length=100, null=True)),
                ('release_date', models.DateField(null=True)),
                ('total_tracks', models.IntegerField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('href', models.URLField(max_length=100, null=True)),
                ('spotify_id', models.CharField(help_text='Search spotify API with this ID for Data.', max_length=50, null=True)),
                ('uri', models.CharField(max_length=100, null=True)),
                ('disc_number', models.IntegerField(null=True)),
                ('duration', models.IntegerField(null=True)),
                ('popularity', models.IntegerField(null=True)),
                ('preview_url', models.URLField(null=True)),
                ('track_number', models.IntegerField(null=True)),
                ('album', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='album_tracks', to='spotify_app.album')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlayHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('played_at', models.DateTimeField()),
                ('track', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='play_history', to='spotify_app.track')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height', models.IntegerField(null=True)),
                ('width', models.IntegerField(null=True)),
                ('url', models.URLField(default=None, max_length=100)),
                ('album', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='album_images', to='spotify_app.album')),
            ],
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('href', models.URLField(max_length=100, null=True)),
                ('spotify_id', models.CharField(help_text='Search spotify API with this ID for Data.', max_length=50, null=True)),
                ('uri', models.CharField(max_length=100, null=True)),
                ('tracks', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='artist_tracks', to='spotify_app.track')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='album',
            name='artists',
            field=models.ManyToManyField(related_name='artist_albums', to='spotify_app.Artist'),
        ),
    ]
